services:
  blueprint:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: blueprint
    depends_on:
    - postgres_db
    entrypoint: bash /code/docker-entrypoint-dev.sh
    environment:
      ALLOWED_HOSTS: localhost,127.0.0.1,0.0.0.0
      CORS_ORIGIN_WHITELIST: localhost,127.0.0.1,0.0.0.0
      DATABASE_ENGINE: postgresql
      DATABASE_HOST: postgres_db
      DATABASE_NAME: blueprint
      DATABASE_PASSWORD: root
      DATABASE_PORT: '5432'
      DATABASE_USER: root
      DEBUG: 'True'
      JWT_PUBLIC_KEY_RSA_BIFROST: '-----BEGIN PUBLIC KEY-----
        MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBALFc9NFZaOaSwUMPNektbtJqEjYZ6IRB
        qhqvJu1hKPYn9HYd75c0gIDYHJ9lb7QwQvg44aO27104rDK0xSstzL0CAwEAAQ==
        -----END PUBLIC KEY-----'
      SECRET_KEY: ww2aa^#2381%9&2pueqk+0ix=g)7h61##(o*mez6h(@b3a3
      STATIC_ROOT: /static/
      GOOGLE_APPLICATION_CREDENTIALS: /code/google-cred.json
    image: blueprint
    ports:
    - 8080:8080
    volumes:
    - .:/code
  postgres_db:
    container_name: postgres_db
    environment:
      POSTGRES_DB: blueprint
      POSTGRES_PASSWORD: root
      POSTGRES_USER: root
    healthcheck:
      interval: 3s
      retries: 5
      test: pg_isready -h localhost -p 5432 -q -U postgres
      timeout: 5s
    image: postgres:10.4-alpine
    restart: always
    volumes:
    - /var/lib/postgresql/data/
version: '3.1'
